# Light Communication Project

This repository contains the **Arduino Transmitter and Receiver codes** for a simple light-based communication system.

---

## ðŸ“¤ Transmitter Code

```cpp
#define TRANSMIT_LED 9
#define SAMPLING_TIME 20
const char* text = "WELCOME TO COEP";

bool led_state = false;
bool transmit_data = true;
int bytes_counter = 20;
int total_bytes;
int transmit_count = 0;

void transmit_byte(char data_byte);

void setup() {
    pinMode(TRANSMIT_LED, OUTPUT);
    total_bytes = strlen(text);
}

void loop() {
    if (transmit_count < 2) {
        transmit_data = true;
        while (transmit_data) {
            transmit_byte(text[total_bytes - bytes_counter]);
            bytes_counter--;
            if (bytes_counter == 0) {
                transmit_data = false;
            }
        }
        bytes_counter = total_bytes;
        transmit_data = true;
        transmit_count++;
        delay(1000);
    }
}

void transmit_byte(char data_byte) {
    digitalWrite(TRANSMIT_LED, LOW);
    delay(SAMPLING_TIME);
    for (int i = 0; i < 8; i++) {
        digitalWrite(TRANSMIT_LED, (data_byte >> i) & 0x01);
        delay(SAMPLING_TIME);
    }
    digitalWrite(TRANSMIT_LED, HIGH);
    delay(SAMPLING_TIME);
}


#define LDR_PIN A0
#define SAMPLING_TIME 20

bool previous_state = true;
bool current_state = true;
char buff[64];

void print_binary(char byte) {
    for (int i = 7; i >= 0; i--) {
        Serial.print((byte >> i) & 1);
    }
}

void setup() {
    Serial.begin(9600);
}

void loop() {
    current_state = get_ldr();
    if (!current_state && previous_state) {
        char received_byte = get_byte();
        Serial.print(received_byte);
        Serial.print(" ");
        Serial.print("Decoded Byte (Binary): ");
        print_binary(received_byte);
        Serial.println();
    }
    previous_state = current_state;
}

bool get_ldr() {
    int val = analogRead(LDR_PIN);
    return val > 700 ? true : false;
}

char get_byte() {
    char data_byte = 0;
    delay(SAMPLING_TIME * 1.5);
    for (int i = 0; i < 8; i++) {
        data_byte = data_byte | ((char)(get_ldr()) << i);
        delay(SAMPLING_TIME);
    }
    return data_byte;
}



---


```bash
git init
git add README.md
git commit -m "Added Transmitter and Receiver codes with sections"
git branch -M main
git remote add origin https://github.com/YourUsername/YourRepoName.git
git push -u origin main

